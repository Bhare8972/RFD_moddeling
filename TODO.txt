TODO:

turn main loop into a class

notice that the "Z" of air is molecular Z!! find errors that this has caused (namely in diffision scattering) and fix it! (I think this is mostly done)

test results of simulation against lehtenin.

add atmosphere density vs altitude

BREMSTRALHUNG:
	check cross section formula against seltzer n' berger tables to test cross section
	compare angular distribution agains cross section formula at lower energies
	compare ""                                         "" at higher energies to test linearity assumptions
	find best way to calculate bremsstrahlung at energies higher than table
	check energy loss due to low-energy photons is significant or not?


Then test simulation against Dwyer and find slowdowns.

add new walker aliasing and cheby polys

improve physics documentation (Desperatly needs to be done!)




Fix production of the diffusion table, so that the convergence condition has a better statisitcal basis. (Maybe use pearson chi-square test)
	Also need to add adaptive bin sizes.

test diffusion tables


make each electron have list<electron_data>
define a structure electron_data before including particle data
add   void add_data(....)  to electron, which calls electron-data constructor and pushes data to list (function is variadic template)
add   vector<T> get_data( T electron_data::getter*() ) where electron_data::getter is a getter method of electron data. This method returns a vector<T> where T is return type of the getter.

add way to output data in an easy-to-read format that can be read by gnuplot


other:
improve utility documentation.  less important.
figure out why interpolant is not thread safe
make reading/writing binary files to correctly handel big-endian machines
work GSL code into project itself instead of being external dependancy
fix multiple implementation of polynomials (amoung other utilities)

